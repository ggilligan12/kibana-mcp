version: '3.7'

services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.14.1 # Use a recent stable version
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=true
      - ELASTIC_PASSWORD=changeme # !!! CHANGE THIS PASSWORD IN A REAL ENVIRONMENT !!!
      - xpack.security.http.ssl.enabled=false # Disable SSL for simplicity in local testing
      - xpack.security.transport.ssl.enabled=false
    ports:
      - "9200:9200"
    networks:
      - elastic
    healthcheck:
      test: ["CMD-SHELL", "curl -s -u elastic:changeme http://localhost:9200/_cluster/health?wait_for_status=yellow&timeout=5s"]
      interval: 10s
      timeout: 10s
      retries: 12

  kibana:
    image: docker.elastic.co/kibana/kibana:8.14.1 # Match ES version
    container_name: kibana
    depends_on:
      elasticsearch:
        condition: service_healthy # Wait for Elasticsearch to be healthy
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - ELASTICSEARCH_USERNAME=elastic
      - ELASTICSEARCH_PASSWORD=changeme # !!! USE THE SAME PASSWORD AS ABOVE !!!
      - SERVER_SSL_ENABLED=false # Optional: Disable SSL for Kibana server itself if not needed for testing
    ports:
      - "5601:5601"
    networks:
      - elastic
    healthcheck:
      test: ["CMD-SHELL", "curl -s -I http://localhost:5601/api/status | grep -q 'HTTP/1.1 200 OK'"]
      interval: 10s
      timeout: 10s
      retries: 12

networks:
  elastic:
    driver: bridge

volumes: # Define persistent volumes (optional but recommended for data persistence)
  esdata:
    driver: local 